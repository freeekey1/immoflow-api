/*
 * Created on 16 janv. 2018 ( Time 22:40:45 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.dialogflow.bean.UtilisateurTranche;
import com.dialogflow.business.service.UtilisateurTrancheService;
import com.dialogflow.web.listitem.UtilisateurTrancheListItem;

/**
 * Spring MVC controller for 'UtilisateurTranche' management.
 */
@Controller
public class UtilisateurTrancheRestController {

	@Resource
	private UtilisateurTrancheService utilisateurTrancheService;
	
	@RequestMapping( value="/items/utilisateurTranche",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UtilisateurTrancheListItem> findAllAsListItems() {
		List<UtilisateurTranche> list = utilisateurTrancheService.findAll();
		List<UtilisateurTrancheListItem> items = new LinkedList<UtilisateurTrancheListItem>();
		for ( UtilisateurTranche utilisateurTranche : list ) {
			items.add(new UtilisateurTrancheListItem( utilisateurTranche ) );
		}
		return items;
	}
	
	@RequestMapping( value="/utilisateurTranche",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UtilisateurTranche> findAll() {
		return utilisateurTrancheService.findAll();
	}

	@RequestMapping( value="/utilisateurTranche/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UtilisateurTranche findOne(@PathVariable("id") Integer id) {
		return utilisateurTrancheService.findById(id);
	}
	
	@RequestMapping( value="/utilisateurTranche",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UtilisateurTranche create(@RequestBody UtilisateurTranche utilisateurTranche) {
		return utilisateurTrancheService.create(utilisateurTranche);
	}

	@RequestMapping( value="/utilisateurTranche/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UtilisateurTranche update(@PathVariable("id") Integer id, @RequestBody UtilisateurTranche utilisateurTranche) {
		return utilisateurTrancheService.update(utilisateurTranche);
	}

	@RequestMapping( value="/utilisateurTranche/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		utilisateurTrancheService.delete(id);
	}
	
}
