/*
 * Created on 16 janv. 2018 ( Time 22:40:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.dialogflow.bean.DossierCredit;
import com.dialogflow.business.service.DossierCreditService;
import com.dialogflow.web.listitem.DossierCreditListItem;

/**
 * Spring MVC controller for 'DossierCredit' management.
 */
@Controller
public class DossierCreditRestController {

	@Resource
	private DossierCreditService dossierCreditService;
	
	@RequestMapping( value="/items/dossierCredit",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DossierCreditListItem> findAllAsListItems() {
		List<DossierCredit> list = dossierCreditService.findAll();
		List<DossierCreditListItem> items = new LinkedList<DossierCreditListItem>();
		for ( DossierCredit dossierCredit : list ) {
			items.add(new DossierCreditListItem( dossierCredit ) );
		}
		return items;
	}
	
	@RequestMapping( value="/dossierCredit",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DossierCredit> findAll() {
		return dossierCreditService.findAll();
	}

	@RequestMapping( value="/dossierCredit/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DossierCredit findOne(@PathVariable("id") Integer id) {
		return dossierCreditService.findById(id);
	}
	
	@RequestMapping( value="/dossierCredit",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DossierCredit create(@RequestBody DossierCredit dossierCredit) {
		return dossierCreditService.create(dossierCredit);
	}

	@RequestMapping( value="/dossierCredit/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DossierCredit update(@PathVariable("id") Integer id, @RequestBody DossierCredit dossierCredit) {
		return dossierCreditService.update(dossierCredit);
	}

	@RequestMapping( value="/dossierCredit/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		dossierCreditService.delete(id);
	}
	
}
