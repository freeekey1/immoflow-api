/*
 * Created on 16 janv. 2018 ( Time 22:12:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.dialogflow.bean.DossierCredit;
import com.dialogflow.bean.jpa.DossierCreditEntity;
import com.dialogflow.bean.jpa.DossierEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class DossierCreditServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public DossierCreditServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'DossierCreditEntity' to 'DossierCredit'
	 * @param dossierCreditEntity
	 */
	public DossierCredit mapDossierCreditEntityToDossierCredit(DossierCreditEntity dossierCreditEntity) {
		if(dossierCreditEntity == null) {
			return null;
		}

		//--- Generic mapping 
		DossierCredit dossierCredit = map(dossierCreditEntity, DossierCredit.class);

		//--- Link mapping ( link to Dossier )
		if(dossierCreditEntity.getDossier() != null) {
			dossierCredit.setRefDossier(dossierCreditEntity.getDossier().getId());
		}
		return dossierCredit;
	}
	
	/**
	 * Mapping from 'DossierCredit' to 'DossierCreditEntity'
	 * @param dossierCredit
	 * @param dossierCreditEntity
	 */
	public void mapDossierCreditToDossierCreditEntity(DossierCredit dossierCredit, DossierCreditEntity dossierCreditEntity) {
		if(dossierCredit == null) {
			return;
		}

		//--- Generic mapping 
		map(dossierCredit, dossierCreditEntity);

		//--- Link mapping ( link : dossierCredit )
		if( hasLinkToDossier(dossierCredit) ) {
			DossierEntity dossier1 = new DossierEntity();
			dossier1.setId( dossierCredit.getRefDossier() );
			dossierCreditEntity.setDossier( dossier1 );
		} else {
			dossierCreditEntity.setDossier( null );
		}

	}
	
	/**
	 * Verify that Dossier id is valid.
	 * @param Dossier Dossier
	 * @return boolean
	 */
	private boolean hasLinkToDossier(DossierCredit dossierCredit) {
		if(dossierCredit.getRefDossier() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}