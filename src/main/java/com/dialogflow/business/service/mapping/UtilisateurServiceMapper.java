/*
 * Created on 16 janv. 2018 ( Time 22:12:15 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.dialogflow.bean.Utilisateur;
import com.dialogflow.bean.jpa.UtilisateurEntity;
import com.dialogflow.bean.jpa.ProfilEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class UtilisateurServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public UtilisateurServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'UtilisateurEntity' to 'Utilisateur'
	 * @param utilisateurEntity
	 */
	public Utilisateur mapUtilisateurEntityToUtilisateur(UtilisateurEntity utilisateurEntity) {
		if(utilisateurEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Utilisateur utilisateur = map(utilisateurEntity, Utilisateur.class);

		//--- Link mapping ( link to Profil )
		if(utilisateurEntity.getProfil() != null) {
			utilisateur.setRefProfil(utilisateurEntity.getProfil().getId());
		}
		return utilisateur;
	}
	
	/**
	 * Mapping from 'Utilisateur' to 'UtilisateurEntity'
	 * @param utilisateur
	 * @param utilisateurEntity
	 */
	public void mapUtilisateurToUtilisateurEntity(Utilisateur utilisateur, UtilisateurEntity utilisateurEntity) {
		if(utilisateur == null) {
			return;
		}

		//--- Generic mapping 
		map(utilisateur, utilisateurEntity);

		//--- Link mapping ( link : utilisateur )
		if( hasLinkToProfil(utilisateur) ) {
			ProfilEntity profil1 = new ProfilEntity();
			profil1.setId( utilisateur.getRefProfil() );
			utilisateurEntity.setProfil( profil1 );
		} else {
			utilisateurEntity.setProfil( null );
		}

	}
	
	/**
	 * Verify that Profil id is valid.
	 * @param Profil Profil
	 * @return boolean
	 */
	private boolean hasLinkToProfil(Utilisateur utilisateur) {
		if(utilisateur.getRefProfil() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}