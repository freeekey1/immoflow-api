/*
 * Created on 16 janv. 2018 ( Time 22:12:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dialogflow.bean.Echeance;
import com.dialogflow.bean.jpa.EcheanceEntity;
import com.dialogflow.business.service.EcheanceService;
import com.dialogflow.business.service.mapping.EcheanceServiceMapper;
import com.dialogflow.data.repository.jpa.EcheanceJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of EcheanceService
 */
@Component
@Transactional
public class EcheanceServiceImpl implements EcheanceService {

	@Resource
	private EcheanceJpaRepository echeanceJpaRepository;

	@Resource
	private EcheanceServiceMapper echeanceServiceMapper;
	
	@Override
	public Echeance findById(Integer id) {
		EcheanceEntity echeanceEntity = echeanceJpaRepository.findOne(id);
		return echeanceServiceMapper.mapEcheanceEntityToEcheance(echeanceEntity);
	}

	@Override
	public List<Echeance> findAll() {
		Iterable<EcheanceEntity> entities = echeanceJpaRepository.findAll();
		List<Echeance> beans = new ArrayList<Echeance>();
		for(EcheanceEntity echeanceEntity : entities) {
			beans.add(echeanceServiceMapper.mapEcheanceEntityToEcheance(echeanceEntity));
		}
		return beans;
	}

	@Override
	public Echeance save(Echeance echeance) {
		return update(echeance) ;
	}

	@Override
	public Echeance create(Echeance echeance) {
		EcheanceEntity echeanceEntity = echeanceJpaRepository.findOne(echeance.getId());
		if( echeanceEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		echeanceEntity = new EcheanceEntity();
		echeanceServiceMapper.mapEcheanceToEcheanceEntity(echeance, echeanceEntity);
		EcheanceEntity echeanceEntitySaved = echeanceJpaRepository.save(echeanceEntity);
		return echeanceServiceMapper.mapEcheanceEntityToEcheance(echeanceEntitySaved);
	}

	@Override
	public Echeance update(Echeance echeance) {
		EcheanceEntity echeanceEntity = echeanceJpaRepository.findOne(echeance.getId());
		echeanceServiceMapper.mapEcheanceToEcheanceEntity(echeance, echeanceEntity);
		EcheanceEntity echeanceEntitySaved = echeanceJpaRepository.save(echeanceEntity);
		return echeanceServiceMapper.mapEcheanceEntityToEcheance(echeanceEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		echeanceJpaRepository.delete(id);
	}

	public EcheanceJpaRepository getEcheanceJpaRepository() {
		return echeanceJpaRepository;
	}

	public void setEcheanceJpaRepository(EcheanceJpaRepository echeanceJpaRepository) {
		this.echeanceJpaRepository = echeanceJpaRepository;
	}

	public EcheanceServiceMapper getEcheanceServiceMapper() {
		return echeanceServiceMapper;
	}

	public void setEcheanceServiceMapper(EcheanceServiceMapper echeanceServiceMapper) {
		this.echeanceServiceMapper = echeanceServiceMapper;
	}

}
