/*
 * Created on 16 janv. 2018 ( Time 22:12:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dialogflow.bean.DossierCredit;
import com.dialogflow.bean.jpa.DossierCreditEntity;
import com.dialogflow.business.service.DossierCreditService;
import com.dialogflow.business.service.mapping.DossierCreditServiceMapper;
import com.dialogflow.data.repository.jpa.DossierCreditJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of DossierCreditService
 */
@Component
@Transactional
public class DossierCreditServiceImpl implements DossierCreditService {

	@Resource
	private DossierCreditJpaRepository dossierCreditJpaRepository;

	@Resource
	private DossierCreditServiceMapper dossierCreditServiceMapper;
	
	@Override
	public DossierCredit findById(Integer id) {
		DossierCreditEntity dossierCreditEntity = dossierCreditJpaRepository.findOne(id);
		return dossierCreditServiceMapper.mapDossierCreditEntityToDossierCredit(dossierCreditEntity);
	}

	@Override
	public List<DossierCredit> findAll() {
		Iterable<DossierCreditEntity> entities = dossierCreditJpaRepository.findAll();
		List<DossierCredit> beans = new ArrayList<DossierCredit>();
		for(DossierCreditEntity dossierCreditEntity : entities) {
			beans.add(dossierCreditServiceMapper.mapDossierCreditEntityToDossierCredit(dossierCreditEntity));
		}
		return beans;
	}

	@Override
	public DossierCredit save(DossierCredit dossierCredit) {
		return update(dossierCredit) ;
	}

	@Override
	public DossierCredit create(DossierCredit dossierCredit) {
		DossierCreditEntity dossierCreditEntity = dossierCreditJpaRepository.findOne(dossierCredit.getId());
		if( dossierCreditEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		dossierCreditEntity = new DossierCreditEntity();
		dossierCreditServiceMapper.mapDossierCreditToDossierCreditEntity(dossierCredit, dossierCreditEntity);
		DossierCreditEntity dossierCreditEntitySaved = dossierCreditJpaRepository.save(dossierCreditEntity);
		return dossierCreditServiceMapper.mapDossierCreditEntityToDossierCredit(dossierCreditEntitySaved);
	}

	@Override
	public DossierCredit update(DossierCredit dossierCredit) {
		DossierCreditEntity dossierCreditEntity = dossierCreditJpaRepository.findOne(dossierCredit.getId());
		dossierCreditServiceMapper.mapDossierCreditToDossierCreditEntity(dossierCredit, dossierCreditEntity);
		DossierCreditEntity dossierCreditEntitySaved = dossierCreditJpaRepository.save(dossierCreditEntity);
		return dossierCreditServiceMapper.mapDossierCreditEntityToDossierCredit(dossierCreditEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		dossierCreditJpaRepository.delete(id);
	}

	public DossierCreditJpaRepository getDossierCreditJpaRepository() {
		return dossierCreditJpaRepository;
	}

	public void setDossierCreditJpaRepository(DossierCreditJpaRepository dossierCreditJpaRepository) {
		this.dossierCreditJpaRepository = dossierCreditJpaRepository;
	}

	public DossierCreditServiceMapper getDossierCreditServiceMapper() {
		return dossierCreditServiceMapper;
	}

	public void setDossierCreditServiceMapper(DossierCreditServiceMapper dossierCreditServiceMapper) {
		this.dossierCreditServiceMapper = dossierCreditServiceMapper;
	}

}
