/*
 * Created on 16 janv. 2018 ( Time 22:12:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dialogflow.bean.DossierClient;
import com.dialogflow.bean.jpa.DossierClientEntity;
import com.dialogflow.business.service.DossierClientService;
import com.dialogflow.business.service.mapping.DossierClientServiceMapper;
import com.dialogflow.data.repository.jpa.DossierClientJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of DossierClientService
 */
@Component
@Transactional
public class DossierClientServiceImpl implements DossierClientService {

	@Resource
	private DossierClientJpaRepository dossierClientJpaRepository;

	@Resource
	private DossierClientServiceMapper dossierClientServiceMapper;
	
	@Override
	public DossierClient findById(Integer id) {
		DossierClientEntity dossierClientEntity = dossierClientJpaRepository.findOne(id);
		return dossierClientServiceMapper.mapDossierClientEntityToDossierClient(dossierClientEntity);
	}

	@Override
	public List<DossierClient> findAll() {
		Iterable<DossierClientEntity> entities = dossierClientJpaRepository.findAll();
		List<DossierClient> beans = new ArrayList<DossierClient>();
		for(DossierClientEntity dossierClientEntity : entities) {
			beans.add(dossierClientServiceMapper.mapDossierClientEntityToDossierClient(dossierClientEntity));
		}
		return beans;
	}

	@Override
	public DossierClient save(DossierClient dossierClient) {
		return update(dossierClient) ;
	}

	@Override
	public DossierClient create(DossierClient dossierClient) {
		DossierClientEntity dossierClientEntity = dossierClientJpaRepository.findOne(dossierClient.getId());
		if( dossierClientEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		dossierClientEntity = new DossierClientEntity();
		dossierClientServiceMapper.mapDossierClientToDossierClientEntity(dossierClient, dossierClientEntity);
		DossierClientEntity dossierClientEntitySaved = dossierClientJpaRepository.save(dossierClientEntity);
		return dossierClientServiceMapper.mapDossierClientEntityToDossierClient(dossierClientEntitySaved);
	}

	@Override
	public DossierClient update(DossierClient dossierClient) {
		DossierClientEntity dossierClientEntity = dossierClientJpaRepository.findOne(dossierClient.getId());
		dossierClientServiceMapper.mapDossierClientToDossierClientEntity(dossierClient, dossierClientEntity);
		DossierClientEntity dossierClientEntitySaved = dossierClientJpaRepository.save(dossierClientEntity);
		return dossierClientServiceMapper.mapDossierClientEntityToDossierClient(dossierClientEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		dossierClientJpaRepository.delete(id);
	}

	public DossierClientJpaRepository getDossierClientJpaRepository() {
		return dossierClientJpaRepository;
	}

	public void setDossierClientJpaRepository(DossierClientJpaRepository dossierClientJpaRepository) {
		this.dossierClientJpaRepository = dossierClientJpaRepository;
	}

	public DossierClientServiceMapper getDossierClientServiceMapper() {
		return dossierClientServiceMapper;
	}

	public void setDossierClientServiceMapper(DossierClientServiceMapper dossierClientServiceMapper) {
		this.dossierClientServiceMapper = dossierClientServiceMapper;
	}

}
