/*
 * Created on 16 janv. 2018 ( Time 22:12:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dialogflow.bean.Reference;
import com.dialogflow.bean.jpa.ReferenceEntity;
import com.dialogflow.business.service.ReferenceService;
import com.dialogflow.business.service.mapping.ReferenceServiceMapper;
import com.dialogflow.data.repository.jpa.ReferenceJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ReferenceService
 */
@Component
@Transactional
public class ReferenceServiceImpl implements ReferenceService {

	@Resource
	private ReferenceJpaRepository referenceJpaRepository;

	@Resource
	private ReferenceServiceMapper referenceServiceMapper;
	
	@Override
	public Reference findById(Integer id) {
		ReferenceEntity referenceEntity = referenceJpaRepository.findOne(id);
		return referenceServiceMapper.mapReferenceEntityToReference(referenceEntity);
	}

	@Override
	public List<Reference> findAll() {
		Iterable<ReferenceEntity> entities = referenceJpaRepository.findAll();
		List<Reference> beans = new ArrayList<Reference>();
		for(ReferenceEntity referenceEntity : entities) {
			beans.add(referenceServiceMapper.mapReferenceEntityToReference(referenceEntity));
		}
		return beans;
	}

	@Override
	public Reference save(Reference reference) {
		return update(reference) ;
	}

	@Override
	public Reference create(Reference reference) {
		ReferenceEntity referenceEntity = referenceJpaRepository.findOne(reference.getId());
		if( referenceEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		referenceEntity = new ReferenceEntity();
		referenceServiceMapper.mapReferenceToReferenceEntity(reference, referenceEntity);
		ReferenceEntity referenceEntitySaved = referenceJpaRepository.save(referenceEntity);
		return referenceServiceMapper.mapReferenceEntityToReference(referenceEntitySaved);
	}

	@Override
	public Reference update(Reference reference) {
		ReferenceEntity referenceEntity = referenceJpaRepository.findOne(reference.getId());
		referenceServiceMapper.mapReferenceToReferenceEntity(reference, referenceEntity);
		ReferenceEntity referenceEntitySaved = referenceJpaRepository.save(referenceEntity);
		return referenceServiceMapper.mapReferenceEntityToReference(referenceEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		referenceJpaRepository.delete(id);
	}

	public ReferenceJpaRepository getReferenceJpaRepository() {
		return referenceJpaRepository;
	}

	public void setReferenceJpaRepository(ReferenceJpaRepository referenceJpaRepository) {
		this.referenceJpaRepository = referenceJpaRepository;
	}

	public ReferenceServiceMapper getReferenceServiceMapper() {
		return referenceServiceMapper;
	}

	public void setReferenceServiceMapper(ReferenceServiceMapper referenceServiceMapper) {
		this.referenceServiceMapper = referenceServiceMapper;
	}

}
