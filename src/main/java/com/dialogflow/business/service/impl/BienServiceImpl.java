/*
 * Created on 16 janv. 2018 ( Time 22:12:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.impl;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dialogflow.bean.Bien;
import com.dialogflow.bean.jpa.BienEntity;
import com.dialogflow.business.service.BienService;
import com.dialogflow.business.service.mapping.BienServiceMapper;
import com.dialogflow.data.repository.jpa.BienJpaRepository;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of BienService
 */
@Component
@Transactional
public class BienServiceImpl implements BienService {

	@Resource
	private BienJpaRepository bienJpaRepository;

	@Resource
	private BienServiceMapper bienServiceMapper;
	
	@Override
	public Bien findById(Integer id) {
		BienEntity bienEntity = bienJpaRepository.findOne(id);
		return bienServiceMapper.mapBienEntityToBien(bienEntity);
	}

	@Override
	public List<Bien> findAll() {
		Iterable<BienEntity> entities = bienJpaRepository.findAll();
		List<Bien> beans = new ArrayList<Bien>();
		for(BienEntity bienEntity : entities) {
			beans.add(bienServiceMapper.mapBienEntityToBien(bienEntity));
		}
		return beans;
	}

	@Override
	public Bien save(Bien bien) {
		return update(bien) ;
	}

	@Override
	public Bien create(Bien bien) {
		BienEntity bienEntity = bienJpaRepository.findOne(bien.getId());
		if( bienEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		bienEntity = new BienEntity();
		bienServiceMapper.mapBienToBienEntity(bien, bienEntity);
		BienEntity bienEntitySaved = bienJpaRepository.save(bienEntity);
		return bienServiceMapper.mapBienEntityToBien(bienEntitySaved);
	}

	@Override
	public Bien update(Bien bien) {
		BienEntity bienEntity = bienJpaRepository.findOne(bien.getId());
		bienServiceMapper.mapBienToBienEntity(bien, bienEntity);
		BienEntity bienEntitySaved = bienJpaRepository.save(bienEntity);
		return bienServiceMapper.mapBienEntityToBien(bienEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		bienJpaRepository.delete(id);
	}

	public BienJpaRepository getBienJpaRepository() {
		return bienJpaRepository;
	}

	public void setBienJpaRepository(BienJpaRepository bienJpaRepository) {
		this.bienJpaRepository = bienJpaRepository;
	}

	public BienServiceMapper getBienServiceMapper() {
		return bienServiceMapper;
	}

	public void setBienServiceMapper(BienServiceMapper bienServiceMapper) {
		this.bienServiceMapper = bienServiceMapper;
	}

	@Override
	public Long CountLibreByProjet(Long projet) {
		Long libres = ((BigDecimal)bienJpaRepository.CountLibreByProjet(projet)).longValue();
		return libres;
	}

}
