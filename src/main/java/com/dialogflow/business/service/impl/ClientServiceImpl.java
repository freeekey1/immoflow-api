/*
 * Created on 16 janv. 2018 ( Time 22:12:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dialogflow.bean.Client;
import com.dialogflow.bean.jpa.ClientEntity;
import com.dialogflow.business.service.ClientService;
import com.dialogflow.business.service.mapping.ClientServiceMapper;
import com.dialogflow.data.repository.jpa.ClientJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ClientService
 */
@Component
@Transactional
public class ClientServiceImpl implements ClientService {

	@Resource
	private ClientJpaRepository clientJpaRepository;

	@Resource
	private ClientServiceMapper clientServiceMapper;
	
	@Override
	public Client findById(Integer id) {
		ClientEntity clientEntity = clientJpaRepository.findOne(id);
		return clientServiceMapper.mapClientEntityToClient(clientEntity);
	}

	@Override
	public List<Client> findAll() {
		Iterable<ClientEntity> entities = clientJpaRepository.findAll();
		List<Client> beans = new ArrayList<Client>();
		for(ClientEntity clientEntity : entities) {
			beans.add(clientServiceMapper.mapClientEntityToClient(clientEntity));
		}
		return beans;
	}

	@Override
	public Client save(Client client) {
		return update(client) ;
	}

	@Override
	public Client create(Client client) {
		ClientEntity clientEntity = clientJpaRepository.findOne(client.getId());
		if( clientEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		clientEntity = new ClientEntity();
		clientServiceMapper.mapClientToClientEntity(client, clientEntity);
		ClientEntity clientEntitySaved = clientJpaRepository.save(clientEntity);
		return clientServiceMapper.mapClientEntityToClient(clientEntitySaved);
	}

	@Override
	public Client update(Client client) {
		ClientEntity clientEntity = clientJpaRepository.findOne(client.getId());
		clientServiceMapper.mapClientToClientEntity(client, clientEntity);
		ClientEntity clientEntitySaved = clientJpaRepository.save(clientEntity);
		return clientServiceMapper.mapClientEntityToClient(clientEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		clientJpaRepository.delete(id);
	}

	public ClientJpaRepository getClientJpaRepository() {
		return clientJpaRepository;
	}

	public void setClientJpaRepository(ClientJpaRepository clientJpaRepository) {
		this.clientJpaRepository = clientJpaRepository;
	}

	public ClientServiceMapper getClientServiceMapper() {
		return clientServiceMapper;
	}

	public void setClientServiceMapper(ClientServiceMapper clientServiceMapper) {
		this.clientServiceMapper = clientServiceMapper;
	}

}
