/*
 * Created on 16 janv. 2018 ( Time 22:12:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.dialogflow.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.dialogflow.bean.DossierCredit;
import com.dialogflow.bean.jpa.DossierCreditEntity;
import com.dialogflow.bean.jpa.DossierEntity;
import com.dialogflow.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class DossierCreditServiceMapperTest {

	private DossierCreditServiceMapper dossierCreditServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		dossierCreditServiceMapper = new DossierCreditServiceMapper();
		dossierCreditServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'DossierCreditEntity' to 'DossierCredit'
	 * @param dossierCreditEntity
	 */
	@Test
	public void testMapDossierCreditEntityToDossierCredit() {
		// Given
		DossierCreditEntity dossierCreditEntity = new DossierCreditEntity();
		dossierCreditEntity.setRefBanque(mockValues.nextInteger());
		dossierCreditEntity.setDateDepotCredit(mockValues.nextDate());
		dossierCreditEntity.setMontantCreditDemande(mockValues.nextFloat());
		dossierCreditEntity.setDateDeblocCredit(mockValues.nextDate());
		dossierCreditEntity.setMontantCreditDebloc(mockValues.nextFloat());
		dossierCreditEntity.setDateCreation(mockValues.nextDate());
		dossierCreditEntity.setDateMaj(mockValues.nextDate());
		dossierCreditEntity.setDossier(new DossierEntity());
		dossierCreditEntity.getDossier().setId(mockValues.nextInteger());
		
		// When
		DossierCredit dossierCredit = dossierCreditServiceMapper.mapDossierCreditEntityToDossierCredit(dossierCreditEntity);
		
		// Then
		assertEquals(dossierCreditEntity.getRefBanque(), dossierCredit.getRefBanque());
		assertEquals(dossierCreditEntity.getDateDepotCredit(), dossierCredit.getDateDepotCredit());
		assertEquals(dossierCreditEntity.getMontantCreditDemande(), dossierCredit.getMontantCreditDemande());
		assertEquals(dossierCreditEntity.getDateDeblocCredit(), dossierCredit.getDateDeblocCredit());
		assertEquals(dossierCreditEntity.getMontantCreditDebloc(), dossierCredit.getMontantCreditDebloc());
		assertEquals(dossierCreditEntity.getDateCreation(), dossierCredit.getDateCreation());
		assertEquals(dossierCreditEntity.getDateMaj(), dossierCredit.getDateMaj());
		assertEquals(dossierCreditEntity.getDossier().getId(), dossierCredit.getRefDossier());
	}
	
	/**
	 * Test : Mapping from 'DossierCredit' to 'DossierCreditEntity'
	 */
	@Test
	public void testMapDossierCreditToDossierCreditEntity() {
		// Given
		DossierCredit dossierCredit = new DossierCredit();
		dossierCredit.setRefBanque(mockValues.nextInteger());
		dossierCredit.setDateDepotCredit(mockValues.nextDate());
		dossierCredit.setMontantCreditDemande(mockValues.nextFloat());
		dossierCredit.setDateDeblocCredit(mockValues.nextDate());
		dossierCredit.setMontantCreditDebloc(mockValues.nextFloat());
		dossierCredit.setDateCreation(mockValues.nextDate());
		dossierCredit.setDateMaj(mockValues.nextDate());
		dossierCredit.setRefDossier(mockValues.nextInteger());

		DossierCreditEntity dossierCreditEntity = new DossierCreditEntity();
		
		// When
		dossierCreditServiceMapper.mapDossierCreditToDossierCreditEntity(dossierCredit, dossierCreditEntity);
		
		// Then
		assertEquals(dossierCredit.getRefBanque(), dossierCreditEntity.getRefBanque());
		assertEquals(dossierCredit.getDateDepotCredit(), dossierCreditEntity.getDateDepotCredit());
		assertEquals(dossierCredit.getMontantCreditDemande(), dossierCreditEntity.getMontantCreditDemande());
		assertEquals(dossierCredit.getDateDeblocCredit(), dossierCreditEntity.getDateDeblocCredit());
		assertEquals(dossierCredit.getMontantCreditDebloc(), dossierCreditEntity.getMontantCreditDebloc());
		assertEquals(dossierCredit.getDateCreation(), dossierCreditEntity.getDateCreation());
		assertEquals(dossierCredit.getDateMaj(), dossierCreditEntity.getDateMaj());
		assertEquals(dossierCredit.getRefDossier(), dossierCreditEntity.getDossier().getId());
	}

}